name: Python CI Template

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PIXI_VERSION: v0.49.0

jobs:
  change-detection:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      run-tests: ${{ steps.changes.outputs.run-tests }}
      run-security: ${{ steps.changes.outputs.run-security }}
      run-performance: ${{ steps.changes.outputs.run-performance }}
      changed-files: ${{ steps.changes.outputs.changed-files }}
      test-modules: ${{ steps.changes.outputs.test-modules }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Detect Changes
        id: changes
        run: |
          echo "run-tests=true" >> $GITHUB_OUTPUT
          echo "run-security=true" >> $GITHUB_OUTPUT
          echo "run-performance=true" >> $GITHUB_OUTPUT
          echo "changed-files=all" >> $GITHUB_OUTPUT
          echo "test-modules=all" >> $GITHUB_OUTPUT

  quick-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: change-detection
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Pixi
        uses: prefix-dev/setup-pixi@v0.8.11
        with:
          pixi-version: ${{ env.PIXI_VERSION }}
      
      - name: Run Quick Lint
        run: pixi run lint
        
      - name: Upload Quick Check Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: quick-checks-results
          path: |
            .ruff_cache/
            artifacts/reports/

  comprehensive-tests:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    needs: [change-detection, quick-checks]
    if: needs.change-detection.outputs.run-tests == 'true'
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Pixi
        uses: prefix-dev/setup-pixi@v0.8.11
        with:
          pixi-version: ${{ env.PIXI_VERSION }}
      
      - name: Run Comprehensive Tests
        run: pixi run test
        
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}-${{ matrix.os }}
          path: |
            artifacts/reports/
            .pytest_cache/

  security-audit:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: change-detection
    if: needs.change-detection.outputs.run-security == 'true'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Pixi
        uses: prefix-dev/setup-pixi@v0.8.11
        with:
          pixi-version: ${{ env.PIXI_VERSION }}
      
      - name: Run Security Audit
        run: |
          pixi exec safety check
          pixi exec bandit -r framework/
          pixi exec pip-audit
          
      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: security-results.sarif
          
      - name: Upload Security Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-audit-results
          path: |
            security-results.sarif
            artifacts/reports/

  performance-check:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: change-detection
    if: needs.change-detection.outputs.run-performance == 'true'
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Pixi
        uses: prefix-dev/setup-pixi@v0.8.11
        with:
          pixi-version: ${{ env.PIXI_VERSION }}
      
      - name: Run Performance Benchmarks
        run: |
          pixi run pytest --benchmark-only
          
      - name: Compare Against Baseline
        run: |
          echo "Comparing performance against baseline..."
          # baseline comparison logic will be implemented
          
      - name: Upload Performance Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results
          path: |
            performance_data/
            artifacts/reports/

  summary:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [change-detection, quick-checks, comprehensive-tests, security-audit, performance-check]
    if: always()
    steps:
      - uses: actions/checkout@v4
      
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "*-results*"
          merge-multiple: true
          path: ./artifacts/
          
      - name: Generate Consolidated Report
        run: |
          echo "Generating consolidated CI report..."
          mkdir -p artifacts/reports/
          # report generation logic will be implemented
          
      - name: Upload Summary Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ci-summary-report
          path: artifacts/reports/